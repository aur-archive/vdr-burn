#! /bin/sh /usr/share/dpatch/dpatch-run
## 01_burn-set-pathes.dpatch by Thomas Günther <tom@toms-cafe.de>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Set pathes of vdrburn-archive.sh, vdrburn-dvd.sh.

@DPATCH@
diff -urNad vdr-plugin-burn-0.1.0~pre21~/chain-archive.c vdr-plugin-burn-0.1.0~pre21/chain-archive.c
--- vdr-plugin-burn-0.1.0~pre21~/chain-archive.c	2006-09-16 20:33:36.000000000 +0200
+++ vdr-plugin-burn-0.1.0~pre21/chain-archive.c	2006-09-30 22:42:50.000000000 +0200
@@ -69,7 +69,7 @@
 		switch (get_job().get_store_mode()) {
 		case storemode_create:
 			{
-				shellprocess* burn = new shellprocess( "burn", shellescape( "vdrburn-archive.sh" ) + "mkiso" );
+				shellprocess* burn = new shellprocess( "burn", shellescape( VDRBURN_ARCHIVE_CMD ) + "mkiso" );
 				burn->put_environment("ISO_FILE",     get_job().get_iso_path());
 				burn->put_environment("GRAFT_POINTS", graftPoints);
 				burn->put_environment("DISC_ID",      get_job().get_volume_id());
@@ -79,7 +79,7 @@
 
 		case storemode_burn:
 			{
-				shellprocess *burn = new shellprocess( "burn", shellescape( "vdrburn-archive.sh" ) + "burndir" );
+				shellprocess *burn = new shellprocess( "burn", shellescape( VDRBURN_ARCHIVE_CMD ) + "burndir" );
 				burn->put_environment("DVD_DEVICE",   BurnParameters.DvdDevice);
 				burn->put_environment("GRAFT_POINTS", graftPoints);
 				burn->put_environment("BURN_SPEED",   global_setup().BurnSpeed);
@@ -93,7 +93,7 @@
 				string fifo = format("{0}/burnfifo") % get_paths().temp;
 				make_fifo(fifo);
 
-				shellprocess* pipe = new shellprocess( "pipe", shellescape( "vdrburn-archive.sh" ) + "pipeiso" );
+				shellprocess* pipe = new shellprocess( "pipe", shellescape( VDRBURN_ARCHIVE_CMD ) + "pipeiso" );
 				pipe->put_environment("CONFIG_PATH",  plugin::get_config_path());
 				pipe->put_environment("GRAFT_POINTS", graftPoints);
 				pipe->put_environment("ISO_FILE",     get_job().get_iso_path());
@@ -101,7 +101,7 @@
 				pipe->put_environment("DISC_ID",      get_job().get_volume_id());
 				add_process(pipe);
 
-				shellprocess* burn = new shellprocess( "burn", shellescape( "vdrburn-archive.sh" ) + "burniso" );
+				shellprocess* burn = new shellprocess( "burn", shellescape( VDRBURN_ARCHIVE_CMD ) + "burniso" );
 				burn->put_environment("DVD_DEVICE",   BurnParameters.DvdDevice);
 				burn->put_environment("ISO_PIPE",     fifo);
 				burn->put_environment("BURN_SPEED",   global_setup().BurnSpeed);
@@ -114,7 +114,7 @@
 
 	bool chain_archive::prepare_recording_mark()
 	{
-		shellprocess* recordingmark = new shellprocess( "recordingmark", shellescape( "vdrburn-archive.sh" ) + "recordingmark" );
+		shellprocess* recordingmark = new shellprocess( "recordingmark", shellescape( VDRBURN_ARCHIVE_CMD ) + "recordingmark" );
 		recordingmark->put_environment("RECORDING_PATH", m_current->get_filename());
 		recordingmark->put_environment("CONFIG_PATH", plugin::get_config_path());
 
@@ -124,7 +124,7 @@
 
 	bool chain_archive::prepare_archive_mark()
 	{
-		shellprocess* archivemark = new shellprocess( "archivemark", shellescape( "vdrburn-archive.sh" ) + "archivemark" );
+		shellprocess* archivemark = new shellprocess( "archivemark", shellescape( VDRBURN_ARCHIVE_CMD ) + "archivemark" );
 		archivemark->put_environment("CONFIG_PATH", plugin::get_config_path());
 
 		add_process(archivemark);
diff -urNad vdr-plugin-burn-0.1.0~pre21~/chain-dvd.c vdr-plugin-burn-0.1.0~pre21/chain-dvd.c
--- vdr-plugin-burn-0.1.0~pre21~/chain-dvd.c	2006-09-16 20:33:36.000000000 +0200
+++ vdr-plugin-burn-0.1.0~pre21/chain-dvd.c	2006-09-30 22:42:50.000000000 +0200
@@ -225,7 +225,7 @@
 		prepare_recording();
 
 		// start authoring
-		shellprocess* author = new shellprocess( "author", shellescape( "vdrburn-dvd.sh" ) + "author" );
+		shellprocess* author = new shellprocess( "author", shellescape( VDRBURN_DVD_CMD ) + "author" );
 		make_dir(xml.get_author_path());
 		author->put_environment("DVDAUTHOR_XML",  xml.get_xml_path());
 		author->put_environment("DVDAUTHOR_PATH", xml.get_author_path());
@@ -253,7 +253,7 @@
 		m_pxAudioIndex = 0;
 
 		// processes
-		shellprocess* demux = new shellprocess( "demux", shellescape( "vdrburn-dvd.sh" ) + demux_call);
+		shellprocess* demux = new shellprocess( "demux", shellescape( VDRBURN_DVD_CMD ) + demux_call);
 		demux->put_environment("RECORDING_PATH", m_currentRecording->get_filename());
 		demux->put_environment("IGNORE_TRACKS",  m_currentRecording->get_ignored_cids());
 		demux->put_environment("USED_TRACKS",    m_currentRecording->get_used_cids());
@@ -274,7 +274,7 @@
 			else
 				requant_call = "requant";
 
-			shellprocess* requant = new shellprocess( "requant", shellescape( "vdrburn-dvd.sh" ) + requant_call );
+			shellprocess* requant = new shellprocess( "requant", shellescape( VDRBURN_DVD_CMD ) + requant_call );
 			requant->put_environment("VIDEO_FILE",     m_currentRecording->get_video_track_path());
 			requant->put_environment("REQUANT_FILE",   m_currentRecording->get_requant_path());
 			requant->put_environment("REQUANT_FACTOR", get_job().get_requant_factor());
@@ -282,7 +282,7 @@
 			add_process(requant);
 		}
 
-		shellprocess* mplex = new shellprocess( "mplex", shellescape( "vdrburn-dvd.sh" ) + "mplex" );
+		shellprocess* mplex = new shellprocess( "mplex", shellescape( VDRBURN_DVD_CMD ) + "mplex" );
 		mplex->put_environment("MOVIE_FILE",     m_currentRecording->get_movie_path());
 		mplex->put_environment("MPEG_DATA_PATH", m_currentRecording->get_paths().data);
 		mplex->put_environment("MPEG_TMP_PATH",  m_currentRecording->get_paths().temp);
@@ -354,7 +354,7 @@
 		switch (get_job().get_store_mode()) {
 		case storemode_create:
 			{
-				shellprocess* burn = new shellprocess( "burn", shellescape( "vdrburn-dvd.sh" ) + "mkiso" );
+				shellprocess* burn = new shellprocess( "burn", shellescape( VDRBURN_DVD_CMD ) + "mkiso" );
 				burn->put_environment("DVDAUTHOR_PATH",
 								  dvdauthor_xml::get_author_path(get_job()));
 				burn->put_environment("ISO_FILE", get_job().get_iso_path());
@@ -371,7 +371,7 @@
 				else
 					burn_call = "burndir";
 
-				shellprocess* burn = new shellprocess( "burn", shellescape( "vdrburn-dvd.sh" ) + burn_call );
+				shellprocess* burn = new shellprocess( "burn", shellescape( VDRBURN_DVD_CMD ) + burn_call );
 				burn->put_environment("DVDAUTHOR_PATH", dvdauthor_xml::get_author_path(get_job()));
 				burn->put_environment("DVD_DEVICE", BurnParameters.DvdDevice);
 				burn->put_environment("BURN_SPEED", global_setup().BurnSpeed);
@@ -386,7 +386,7 @@
 				fifofmt % get_paths().temp;
 				make_fifo( fifofmt.str() );
 
-				shellprocess* pipe = new shellprocess( "pipe", shellescape( "vdrburn-dvd.sh" ) + "pipeiso" );
+				shellprocess* pipe = new shellprocess( "pipe", shellescape( VDRBURN_DVD_CMD ) + "pipeiso" );
 				pipe->put_environment("DVDAUTHOR_PATH", dvdauthor_xml::get_author_path(get_job()));
 				pipe->put_environment("ISO_FILE",       get_job().get_iso_path());
 				pipe->put_environment("ISO_PIPE",       fifofmt.str());
@@ -399,7 +399,7 @@
  				else
  					burn_call = "burniso";
 
- 				shellprocess* burn = new shellprocess( "burn", shellescape( "vdrburn-dvd.sh" ) + burn_call );
+ 				shellprocess* burn = new shellprocess( "burn", shellescape( VDRBURN_DVD_CMD ) + burn_call );
 				burn->put_environment("DVD_DEVICE", BurnParameters.DvdDevice);
 				burn->put_environment("ISO_PIPE",   fifofmt.str());
 				burn->put_environment("BURN_SPEED", global_setup().BurnSpeed);
@@ -453,7 +453,7 @@
 
 	bool chain_dvd::prepare_dmh_archive()
 	{
-		shellprocess* dmharchive = new shellprocess( "dmharchive", shellescape( "vdrburn-dvd.sh" ) + "dmharchive" );
+		shellprocess* dmharchive = new shellprocess( "dmharchive", shellescape( VDRBURN_DVD_CMD ) + "dmharchive" );
 		dmharchive->put_environment("DVDAUTHOR_PATH", dvdauthor_xml::get_author_path(get_job()));
 		dmharchive->put_environment("RECORDING_PATH", m_currentRecording->get_filename());
 		dmharchive->put_environment("TEMP_PATH",  m_currentRecording->get_paths().temp);
@@ -468,7 +468,7 @@
 
 	bool chain_dvd::prepare_archive_mark()
 	{
-		shellprocess* archivemark = new shellprocess( "archivemark", shellescape( "vdrburn-dvd.sh" ) + "archivemark" );
+		shellprocess* archivemark = new shellprocess( "archivemark", shellescape( VDRBURN_DVD_CMD ) + "archivemark" );
 		archivemark->put_environment("DVDAUTHOR_PATH", dvdauthor_xml::get_author_path(get_job()));
 		archivemark->put_environment("CONFIG_PATH",    plugin::get_config_path());
 
diff -urNad vdr-plugin-burn-0.1.0~pre21~/common.h vdr-plugin-burn-0.1.0~pre21/common.h
--- vdr-plugin-burn-0.1.0~pre21~/common.h	2006-09-16 20:33:36.000000000 +0200
+++ vdr-plugin-burn-0.1.0~pre21/common.h	2006-09-30 22:42:50.000000000 +0200
@@ -18,6 +18,9 @@
 #define JOBNAMELEN 255
 #define MAXATRACKS (MAXAPIDS + MAXDPIDS)
 
+#define VDRBURN_ARCHIVE_CMD "/usr/share/vdr-plugin-burn/vdrburn-archive.sh"
+#define VDRBURN_DVD_CMD     "/usr/share/vdr-plugin-burn/vdrburn-dvd.sh"
+ 
 class cRecording;
 
 namespace vdr_burn
diff -urNad vdr-plugin-burn-0.1.0~pre21~/proctools/proctest.cc vdr-plugin-burn-0.1.0~pre21/proctools/proctest.cc
--- vdr-plugin-burn-0.1.0~pre21~/proctools/proctest.cc	2006-09-16 17:22:02.000000000 +0200
+++ vdr-plugin-burn-0.1.0~pre21/proctools/proctest.cc	2006-09-30 22:42:50.000000000 +0200
@@ -94,7 +94,7 @@
 
 	make_dir("data/dvdauthor");
 
-	proc = new shellprocess("author", "vdrburn-dvd.sh author");
+	proc = new shellprocess("author", VDRBURN_DVD_CMD" author");
 	proc->put_environment("DVDAUTHOR_PATH", "data/dvdauthor");
 	add_process(proc);
 
@@ -117,13 +117,13 @@
 
 void procchain_dvd::prepare_recording()
 {
-	process *proc = new shellprocess("demux", "vdrburn-dvd.sh demux");
+	process *proc = new shellprocess("demux", VDRBURN_DVD_CMD" demux");
 	proc->put_environment("RECORDING_PATH", recs[m_index].path);
 	proc->put_environment("VIDEO_FILE", recs[m_index].video);
 	proc->put_environment("MPEG_PATH", recs[m_index].temp);
 	add_process(proc);
 
-	proc = new shellprocess("mplex", "vdrburn-dvd.sh mplex");
+	proc = new shellprocess("mplex", VDRBURN_DVD_CMD" mplex");
 	proc->put_environment("VIDEO_FILE", recs[m_index].video);
 	proc->put_environment("AUDIO_FILES", recs[m_index].audio);
 	proc->put_environment("MOVIE_FILE", recs[m_index].movie);
diff -urNad vdr-plugin-burn-0.1.0~pre21~/render.c vdr-plugin-burn-0.1.0~pre21/render.c
--- vdr-plugin-burn-0.1.0~pre21~/render.c	2006-09-16 20:33:36.000000000 +0200
+++ vdr-plugin-burn-0.1.0~pre21/render.c	2006-09-30 22:42:50.000000000 +0200
@@ -101,7 +101,7 @@
 		config.write( page );
 
 		// TODO: move rendering into chain
-		shellprocess render( "render", shellescape( "vdrburn-dvd.sh" ) + "render" );
+		shellprocess render( "render", shellescape( VDRBURN_DVD_CMD ) + "render" );
 		render.put_environment( "MENU_BACKGROUND", item.get_menu_background( page ) );
 		render.put_environment( "MENU_SOUNDTRACK", plugin::get_config_path() + "/menu-silence.mp2" );
 		render.put_environment( "MENU_XML", config.get_xml_path( page ) );
diff -urNad vdr-plugin-burn-0.1.0~pre21~/vdrburn-dvd.sh vdr-plugin-burn-0.1.0~pre21/vdrburn-dvd.sh
--- vdr-plugin-burn-0.1.0~pre21~/vdrburn-dvd.sh	2006-08-27 20:34:30.000000000 +0200
+++ vdr-plugin-burn-0.1.0~pre21/vdrburn-dvd.sh	2006-09-30 22:43:26.000000000 +0200
@@ -60,9 +60,9 @@
 		fi
 
 		vdrsync.pl -o "$MPEG_TMP_PATH" \
-			-v-filter "burn-buffers" \
-			-a-filter "burn-buffers" \
-			-ac3-filter "burn-buffers" \
+			-v-filter "/usr/lib/vdr-plugin-burn/burn-buffers" \
+			-a-filter "/usr/lib/vdr-plugin-burn/burn-buffers" \
+			-ac3-filter "/usr/lib/vdr-plugin-burn/burn-buffers" \
 			$CUT $IGNORE "$RECORDING_PATH/"
 	;;
 
@@ -146,7 +146,7 @@
  			SPU=$MPEG_DATA_PATH
 		elif [ "!" "x$SUP" = "x" ]; then
 			# from http://www.guru-group.fi/~too/sw/m2vmp2cut/
-			pxsup2dast "$SUP"*
+			/usr/lib/vdr-plugin-burn/pxsup2dast "$SUP"*
 			SPU=$(find "$MPEG_DATA_PATH" -name \*.d)
 		fi
 
